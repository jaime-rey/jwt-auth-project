{"ast":null,"code":"import axios from 'axios';\nimport * as i0 from \"@angular/core\";\nexport class AxiosService {\n  constructor() {\n    axios.defaults.baseURL = 'http://localhost:8080';\n    axios.defaults.headers.post['Content-Type'] = 'application/json';\n  }\n  getAuthToken() {\n    return window.localStorage.getItem(\"auth_token\");\n  }\n  setAuthToken(token) {\n    if (token !== null) {\n      window.localStorage.setItem(\"auth_token\", token);\n    } else {\n      window.localStorage.removeItem(\"auth_token\");\n    }\n  }\n  request(method, url, data) {\n    let headers = {};\n    if (this.getAuthToken() !== null) {\n      headers = {\n        \"Authorization\": \"Bearer \" + this.getAuthToken()\n      };\n    }\n    return axios({\n      method: method,\n      url: url,\n      data: data,\n      headers: headers\n    });\n  }\n}\nAxiosService.ɵfac = function AxiosService_Factory(t) {\n  return new (t || AxiosService)();\n};\nAxiosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AxiosService,\n  factory: AxiosService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["axios","AxiosService","constructor","defaults","baseURL","headers","post","getAuthToken","window","localStorage","getItem","setAuthToken","token","setItem","removeItem","request","method","url","data","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jaime\\prog\\angular\\frontend\\src\\app\\axios.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport axios from 'axios';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AxiosService {\n\n  constructor() {\n    axios.defaults.baseURL = 'http://localhost:8080';\n    axios.defaults.headers.post['Content-Type'] = 'application/json';\n  }\n\n  getAuthToken(): string | null {\n    return window.localStorage.getItem(\"auth_token\");\n  }\n\n  setAuthToken(token: string | null): void {\n    if (token !== null) {\n      window.localStorage.setItem(\"auth_token\", token);\n    } else {\n      window.localStorage.removeItem(\"auth_token\");\n    }\n  }\n\n\n  request(method: string, url: string, data: any): Promise<any> {\n    let headers: any = {};\n\n    if (this.getAuthToken() !== null) {\n      headers = { \"Authorization\": \"Bearer \" + this.getAuthToken() };\n    }\n\n    return axios({\n      method: method,\n      url: url,\n      data: data,\n      headers: headers\n    });\n  }\n}\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;;AAKzB,OAAM,MAAOC,YAAY;EAEvBC,YAAA;IACEF,KAAK,CAACG,QAAQ,CAACC,OAAO,GAAG,uBAAuB;IAChDJ,KAAK,CAACG,QAAQ,CAACE,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC,GAAG,kBAAkB;EAClE;EAEAC,YAAYA,CAAA;IACV,OAAOC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAClD;EAEAC,YAAYA,CAACC,KAAoB;IAC/B,IAAIA,KAAK,KAAK,IAAI,EAAE;MAClBJ,MAAM,CAACC,YAAY,CAACI,OAAO,CAAC,YAAY,EAAED,KAAK,CAAC;KACjD,MAAM;MACLJ,MAAM,CAACC,YAAY,CAACK,UAAU,CAAC,YAAY,CAAC;;EAEhD;EAGAC,OAAOA,CAACC,MAAc,EAAEC,GAAW,EAAEC,IAAS;IAC5C,IAAIb,OAAO,GAAQ,EAAE;IAErB,IAAI,IAAI,CAACE,YAAY,EAAE,KAAK,IAAI,EAAE;MAChCF,OAAO,GAAG;QAAE,eAAe,EAAE,SAAS,GAAG,IAAI,CAACE,YAAY;MAAE,CAAE;;IAGhE,OAAOP,KAAK,CAAC;MACXgB,MAAM,EAAEA,MAAM;MACdC,GAAG,EAAEA,GAAG;MACRC,IAAI,EAAEA,IAAI;MACVb,OAAO,EAAEA;KACV,CAAC;EACJ;;AAjCWJ,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;SAAZA,YAAY;EAAAkB,OAAA,EAAZlB,YAAY,CAAAmB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}