{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../axios.service\";\nimport * as i2 from \"../login-form/login-form.component\";\nexport class ContentComponent {\n  constructor(axiosService) {\n    this.axiosService = axiosService;\n    this.componentToShow = \"welcome\";\n  }\n  showComponent(componentToShow) {\n    this.componentToShow = componentToShow;\n  }\n  onLogin(input) {\n    this.axiosService.request(\"POST\", \"/login\", {\n      login: input.login,\n      password: input.password\n    }).then(response => {\n      this.axiosService.setAuthToken(response.data.token);\n      this.componentToShow = \"messages\";\n    }).catch(error => {\n      this.axiosService.setAuthToken(null);\n      this.componentToShow = \"welcome\";\n    });\n  }\n  onRegister(input) {\n    this.axiosService.request(\"POST\", \"/register\", {\n      firstName: input.firstName,\n      lastName: input.lastName,\n      login: input.login,\n      password: input.password\n    }).then(response => {\n      this.axiosService.setAuthToken(response.data.token);\n      this.componentToShow = \"messages\";\n    }).catch(error => {\n      this.axiosService.setAuthToken(null);\n      this.componentToShow = \"welcome\";\n    });\n  }\n}\nContentComponent.ɵfac = function ContentComponent_Factory(t) {\n  return new (t || ContentComponent)(i0.ɵɵdirectiveInject(i1.AxiosService));\n};\nContentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContentComponent,\n  selectors: [[\"app-content\"]],\n  decls: 2,\n  vars: 0,\n  consts: [[3, \"onSubmitRegisterEvent\"]],\n  template: function ContentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"app-login-form\", 0);\n      i0.ɵɵlistener(\"onSubmitRegisterEvent\", function ContentComponent_Template_app_login_form_onSubmitRegisterEvent_1_listener($event) {\n        return ctx.onRegister($event);\n      });\n      i0.ɵɵelementEnd()();\n    }\n  },\n  dependencies: [i2.LoginFormComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["ContentComponent","constructor","axiosService","componentToShow","showComponent","onLogin","input","request","login","password","then","response","setAuthToken","data","token","catch","error","onRegister","firstName","lastName","i0","ɵɵdirectiveInject","i1","AxiosService","selectors","decls","vars","consts","template","ContentComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","ContentComponent_Template_app_login_form_onSubmitRegisterEvent_1_listener","$event","ɵɵelementEnd"],"sources":["C:\\Users\\jaime\\prog\\angular\\frontend\\src\\app\\content\\content.component.ts","C:\\Users\\jaime\\prog\\angular\\frontend\\src\\app\\content\\content.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AxiosService } from '../axios.service';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})\nexport class ContentComponent {\n  componentToShow: string = \"welcome\";\n\n  constructor(private axiosService: AxiosService) { }\n\n  showComponent(componentToShow: string): void {\n    this.componentToShow = componentToShow;\n  }\n\n  onLogin(input: any): void {\n    this.axiosService.request(\n      \"POST\",\n      \"/login\",\n      {\n        login: input.login,\n        password: input.password\n      }).then(\n        response => {\n          this.axiosService.setAuthToken(response.data.token);\n          this.componentToShow = \"messages\";\n        }).catch(\n          error => {\n            this.axiosService.setAuthToken(null);\n            this.componentToShow = \"welcome\";\n          }\n        );\n\n  }\n\n  onRegister(input: any): void {\n    this.axiosService.request(\n      \"POST\",\n      \"/register\",\n      {\n        firstName: input.firstName,\n        lastName: input.lastName,\n        login: input.login,\n        password: input.password\n      }).then(\n        response => {\n          this.axiosService.setAuthToken(response.data.token);\n          this.componentToShow = \"messages\";\n        }).catch(\n          error => {\n            this.axiosService.setAuthToken(null);\n            this.componentToShow = \"welcome\";\n          }\n        );\n  }\n\n}\n","<div>\n  <app-login-form (onSubmitRegisterEvent)=\"onRegister($event)\" />\n</div>"],"mappings":";;;AAQA,OAAM,MAAOA,gBAAgB;EAG3BC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAFhC,KAAAC,eAAe,GAAW,SAAS;EAEe;EAElDC,aAAaA,CAACD,eAAuB;IACnC,IAAI,CAACA,eAAe,GAAGA,eAAe;EACxC;EAEAE,OAAOA,CAACC,KAAU;IAChB,IAAI,CAACJ,YAAY,CAACK,OAAO,CACvB,MAAM,EACN,QAAQ,EACR;MACEC,KAAK,EAAEF,KAAK,CAACE,KAAK;MAClBC,QAAQ,EAAEH,KAAK,CAACG;KACjB,CAAC,CAACC,IAAI,CACLC,QAAQ,IAAG;MACT,IAAI,CAACT,YAAY,CAACU,YAAY,CAACD,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;MACnD,IAAI,CAACX,eAAe,GAAG,UAAU;IACnC,CAAC,CAAC,CAACY,KAAK,CACNC,KAAK,IAAG;MACN,IAAI,CAACd,YAAY,CAACU,YAAY,CAAC,IAAI,CAAC;MACpC,IAAI,CAACT,eAAe,GAAG,SAAS;IAClC,CAAC,CACF;EAEP;EAEAc,UAAUA,CAACX,KAAU;IACnB,IAAI,CAACJ,YAAY,CAACK,OAAO,CACvB,MAAM,EACN,WAAW,EACX;MACEW,SAAS,EAAEZ,KAAK,CAACY,SAAS;MAC1BC,QAAQ,EAAEb,KAAK,CAACa,QAAQ;MACxBX,KAAK,EAAEF,KAAK,CAACE,KAAK;MAClBC,QAAQ,EAAEH,KAAK,CAACG;KACjB,CAAC,CAACC,IAAI,CACLC,QAAQ,IAAG;MACT,IAAI,CAACT,YAAY,CAACU,YAAY,CAACD,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;MACnD,IAAI,CAACX,eAAe,GAAG,UAAU;IACnC,CAAC,CAAC,CAACY,KAAK,CACNC,KAAK,IAAG;MACN,IAAI,CAACd,YAAY,CAACU,YAAY,CAAC,IAAI,CAAC;MACpC,IAAI,CAACT,eAAe,GAAG,SAAS;IAClC,CAAC,CACF;EACP;;AAhDWH,gBAAgB,C;mBAAhBA,gBAAgB,EAAAoB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA;AAAA;AAAhBvB,gBAAgB,C;QAAhBA,gBAAgB;EAAAwB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR7BV,EAAA,CAAAY,cAAA,UAAK;MACaZ,EAAA,CAAAa,UAAA,mCAAAC,0EAAAC,MAAA;QAAA,OAAyBJ,GAAA,CAAAd,UAAA,CAAAkB,MAAA,CAAkB;MAAA,EAAC;MAA5Df,EAAA,CAAAgB,YAAA,EAA+D"},"metadata":{},"sourceType":"module","externalDependencies":[]}